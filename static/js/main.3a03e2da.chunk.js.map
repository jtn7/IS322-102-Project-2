{"version":3,"sources":["components/ViewNav.js","components/BoardView.js","components/List.js","components/Card.js","App.js","index.js"],"names":["ViewNav","props","className","currentView","BoardView","listComponents","List","listTitle","cardComponents","Card","moveCard","bind","destination","this","move","id","parentList","moveButtons","leftButton","onClick","e","rightButton","bothButtons","text","substring","length","type","Component","App","state","view","handleView","getListComponents","fetch","then","resp","json","listData","setState","listJSON","origin","cardsState","JSON","parse","stringify","cardIndex","lists","cards","findIndex","card","cardRemoved","splice","push","map","list","key","boardView","handler","ReactDOM","render","document","getElementById"],"mappings":"wNA6BeA,MA1Bf,SAAkBC,GAChB,OACE,yBAAKC,UAAU,WACb,yBACEA,UAE0B,UAAtBD,EAAME,YACF,wBACA,4BALV,cASA,yBACED,UAE0B,SAAtBD,EAAME,YACF,wBACA,4BALV,aASA,yBAAKD,UAAU,kBAAf,gBCbSE,MARf,SAAoBH,GAClB,OACE,yBAAKC,UAAU,aACZD,EAAMI,iBCMEC,MATf,SAAeL,GACb,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aAAaD,EAAMM,WACjCN,EAAMO,iBC4CEC,E,kDA/Cb,aAAgB,IAAD,8BACb,gBAEKC,SAAW,EAAKA,SAASC,KAAd,gBAHH,E,qDAMLC,GACRC,KAAKZ,MAAMa,KAAKD,KAAKZ,MAAMc,GAAIF,KAAKZ,MAAMe,WAAa,EAAGJ,K,+BAGjD,IAeLK,EAfI,OACFC,EACN,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,oBAAoBiB,QAAS,SAAAC,GAAC,OAAI,EAAKV,SAAS,EAAKT,MAAMe,WAAa,KAAvF,MAEIK,EACN,yBAAKnB,UAAU,WACb,yBAAKA,UAAU,qBAAqBiB,QAAS,SAAAC,GAAC,OAAI,EAAKV,SAAS,EAAKT,MAAMe,cAA3E,OAEIM,EACN,yBAAKpB,UAAU,WACb,yBAAKA,UAAU,oBAAoBiB,QAAS,SAAAC,GAAC,OAAI,EAAKV,SAAS,EAAKT,MAAMe,WAAa,KAAvF,MACA,yBAAKd,UAAU,qBAAqBiB,QAAS,SAAAC,GAAC,OAAI,EAAKV,SAAS,EAAKT,MAAMe,cAA3E,OAYF,OAPEC,EAD6B,UAA3BJ,KAAKZ,MAAMgB,YACCI,EACsB,SAA3BR,KAAKZ,MAAMgB,YACNC,EAEAI,EAId,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,QACZW,KAAKZ,MAAMsB,KAAKC,UAAU,EAAG,IAC7BX,KAAKZ,MAAMsB,KAAKE,OAAS,GAAK,MAAQ,IAEzC,yBAAKvB,UAAU,QAAf,SAA6BW,KAAKZ,MAAMyB,MACvCT,O,GA1CUU,aC4FJC,E,kDAxFb,aAAgB,IAAD,8BACb,gBACKC,MACL,CACEC,KAAM,QACNzB,eAAgB,MAGlB,EAAK0B,WAAa,EAAKA,WAAWpB,KAAhB,gBAClB,EAAKD,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKqB,kBAAoB,EAAKA,kBAAkBrB,KAAvB,gBAVZ,E,gEAaO,IAAD,OACnBsB,MAAM,uIACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACJ,EAAKC,SACH,CACEC,SAAUF,EACVhC,eAAgB,EAAK2B,kBAAkBK,U,+BAKvCtB,EAAIyB,EAAQ5B,GACpB,IAAM6B,EAAaC,KAAKC,MAAMD,KAAKE,UAAU/B,KAAKgB,MAAMU,WAElDM,EAAYJ,EAAWK,MAAMN,GAAQO,MAAMC,WAAU,SAAAC,GAAI,OAAIA,EAAKlC,KAAOA,KACzEmC,EAAcT,EAAWK,MAAMN,GAAQO,MAAMI,OAAON,EAAW,GAAG,GACxEJ,EAAWK,MAAMlC,GAAamC,MAAMK,KAAKF,GAEzCrC,KAAKyB,SAAS,CACZC,SAAUE,EACVpC,eAAgBQ,KAAKmB,kBAAkBS,O,wCAKxBF,GAAW,IAAD,OAC3B,OAAOA,EAASO,MAAMO,KAAI,SAAAC,GACxB,IAAIrC,EAEFA,EADc,IAAZqC,EAAKvC,GACO,QACLuC,EAAKvC,KAAOwB,EAASO,MAAMrB,OACtB,OAEA,OAEhB,IAAMsB,EAAQO,EAAKP,MAAMM,KAAI,SAAAJ,GAAI,OAC/B,kBAAC,EAAD,CACEM,IAAKN,EAAKlC,GACVA,GAAIkC,EAAKlC,GACTQ,KAAM0B,EAAK1B,KACXG,KAAMuB,EAAKvB,KACXV,WAAYsC,EAAKvC,GACjBD,KAAM,EAAKJ,SACXO,YAAaA,OAEjB,OACE,kBAAC,EAAD,CACEsC,IAAKD,EAAKvC,GACVR,UAAW+C,EAAK/C,UAChBC,eAAgBuC,S,mCAOF,UAApBlC,KAAKgB,MAAMC,KACPjB,KAAKyB,SAAS,CAAER,KAAM,SACtBjB,KAAKyB,SAAS,CAAER,KAAM,Y,+BAI1B,IAAM0B,EAAY,kBAAC,EAAD,CAAWnD,eAAgBQ,KAAKgB,MAAMxB,iBAExD,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,CAASC,YAAaU,KAAKgB,MAAMC,KAAM2B,QAAS5C,KAAKkB,aACrD,6BACCyB,O,GAnFS7B,aCDlB+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3a03e2da.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react'\n\nfunction ViewNav (props) {\n  return (\n    <div className=\"ViewNav\">\n      <div\n        className=\n          {\n            props.currentView === 'board'\n              ? 'activeView viewSelect'\n              : 'nonActiveView viewSelect'\n          }>\n          Board View\n      </div>\n      <div\n        className=\n          {\n            props.currentView === 'list'\n              ? 'activeView viewSelect'\n              : 'nonActiveView viewSelect'\n          }>\n          List View\n      </div>\n      <div className=\"button addTask\">+ Add Task</div>\n    </div>\n  )\n}\n\nexport default ViewNav\n","/* eslint-disable react/prop-types */\nimport React from 'react'\n\nfunction BoardView (props) {\n  return (\n    <div className=\"BoardView\">\n      {props.listComponents}\n    </div>\n  )\n}\n\nexport default BoardView\n","/* eslint-disable react/prop-types */\nimport React from 'react'\n\nfunction List (props) {\n  return (\n    <div className=\"list\">\n      <div className=\"listTitle\">{props.listTitle}</div>\n      {props.cardComponents}\n    </div>\n  )\n}\n\nexport default List\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react'\n\nclass Card extends Component {\n  constructor () {\n    super()\n\n    this.moveCard = this.moveCard.bind(this)\n  }\n\n  moveCard (destination) {\n    this.props.move(this.props.id, this.props.parentList - 1, destination)\n  }\n\n  render () {\n    const leftButton =\n    <div className=\"buttons\">\n      <div className=\"button leftButton\" onClick={e => this.moveCard(this.props.parentList - 2)}>&lt;</div>\n    </div>\n    const rightButton =\n    <div className=\"buttons\">\n      <div className=\"button rightButton\" onClick={e => this.moveCard(this.props.parentList)}> &gt;</div>\n    </div>\n    const bothButtons =\n    <div className=\"buttons\">\n      <div className=\"button leftButton\" onClick={e => this.moveCard(this.props.parentList - 2)}> &lt;</div>\n      <div className=\"button rightButton\" onClick={e => this.moveCard(this.props.parentList)}> &gt;</div>\n    </div>\n\n    let moveButtons\n    if (this.props.moveButtons === 'right') {\n      moveButtons = rightButton\n    } else if (this.props.moveButtons === 'left') {\n      moveButtons = leftButton\n    } else {\n      moveButtons = bothButtons\n    }\n\n    return (\n      <div className=\"card\">\n        <div className=\"text\">\n          {this.props.text.substring(0, 75)}\n          {this.props.text.length > 75 ? '...' : ''}\n        </div>\n        <div className=\"type\">type: {this.props.type}</div>\n        {moveButtons}\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import React, { Component } from 'react'\nimport ViewNav from './components/ViewNav.js'\nimport BoardView from './components/BoardView.js'\nimport List from './components/List.js'\nimport Card from './components/Card.js'\n\nclass App extends Component {\n  constructor () {\n    super()\n    this.state =\n    {\n      view: 'board',\n      listComponents: null\n    }\n\n    this.handleView = this.handleView.bind(this)\n    this.moveCard = this.moveCard.bind(this)\n    this.getListComponents = this.getListComponents.bind(this)\n  }\n\n  componentDidMount () {\n    fetch('https://gist.githubusercontent.com/jtn7/f16c35ea85fdc9ff143bee256e2c7dcb/raw/72b9eed56475c4bd81f1a56cf627921ffa900591/listData.json')\n      .then(resp => resp.json())\n      .then(listData => {\n        this.setState(\n          {\n            listJSON: listData,\n            listComponents: this.getListComponents(listData)\n          })\n      })\n  }\n\n  moveCard (id, origin, destination) {\n    const cardsState = JSON.parse(JSON.stringify(this.state.listJSON))\n\n    const cardIndex = cardsState.lists[origin].cards.findIndex(card => card.id === id)\n    const cardRemoved = cardsState.lists[origin].cards.splice(cardIndex, 1)[0]\n    cardsState.lists[destination].cards.push(cardRemoved)\n\n    this.setState({\n      listJSON: cardsState,\n      listComponents: this.getListComponents(cardsState)\n    }\n    )\n  }\n\n  getListComponents (listJSON) {\n    return listJSON.lists.map(list => {\n      let moveButtons\n      if (list.id === 1) {\n        moveButtons = 'right'\n      } else if (list.id === listJSON.lists.length) {\n        moveButtons = 'left'\n      } else {\n        moveButtons = 'both'\n      }\n      const cards = list.cards.map(card =>\n        <Card\n          key={card.id}\n          id={card.id}\n          text={card.text}\n          type={card.type}\n          parentList={list.id}\n          move={this.moveCard}\n          moveButtons={moveButtons}\n        />)\n      return (\n        <List\n          key={list.id}\n          listTitle={list.listTitle}\n          cardComponents={cards}\n        />\n      )\n    })\n  }\n\n  handleView () {\n    this.state.view === 'board'\n      ? this.setState({ view: 'list' })\n      : this.setState({ view: 'board' })\n  }\n\n  render () {\n    const boardView = <BoardView listComponents={this.state.listComponents}/>\n\n    return (\n      <div className=\"App\">\n        <ViewNav currentView={this.state.view} handler={this.handleView}/>\n        <hr/>\n        {boardView}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}